// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"douyin/pkg/gateway/api/internal/handler/feed"
	publish2 "douyin/pkg/gateway/api/internal/handler/publish"
	user2 "douyin/pkg/gateway/api/internal/handler/user"
	userOpt2 "douyin/pkg/gateway/api/internal/handler/userOpt"
	"douyin/pkg/gateway/api/internal/svc"
	"net/http"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthJWT},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/favorite/action",
					Handler: userOpt2.FavoriteOptHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/comment/action",
					Handler: userOpt2.CommentOptHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/action",
					Handler: userOpt2.FollowOptHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthJWT},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/favorite/list",
					Handler: userOpt2.GetFavoriteListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/comment/list",
					Handler: userOpt2.GetCommentListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/relation/follow/list",
					Handler: userOpt2.GetFollowListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/relation/follower/list",
					Handler: userOpt2.GetFollowerListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user2.UserRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user2.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/douyin/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthJWT},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: user2.UserInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthJWT},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/action",
					Handler: publish2.PublishVideoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: publish2.GetPublishVideoListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/publish"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.IsLogin},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: feed.FeedVideoListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/feed"),
	)
}
