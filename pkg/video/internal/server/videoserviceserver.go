// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"douyin/pkg/video/internal/logic"
	"douyin/pkg/video/internal/svc"
	"douyin/pkg/video/types/video"
)

type VideoServiceServer struct {
	svcCtx *svc.ServiceContext
	video.UnimplementedVideoServiceServer
}

func NewVideoServiceServer(svcCtx *svc.ServiceContext) *VideoServiceServer {
	return &VideoServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServiceServer) PublishVideo(ctx context.Context, in *video.PublishVideoReq) (*video.PublishVideoResp, error) {
	l := logic.NewPublishVideoLogic(ctx, s.svcCtx)
	return l.PublishVideo(in)
}

func (s *VideoServiceServer) GetVideo(ctx context.Context, in *video.GetVideoReq) (*video.GetVideoResp, error) {
	l := logic.NewGetVideoLogic(ctx, s.svcCtx)
	return l.GetVideo(in)
}

func (s *VideoServiceServer) GetAllVideoByUserId(ctx context.Context, in *video.GetAllVideoByUserIdReq) (*video.GetAllVideoByUserIdResp, error) {
	l := logic.NewGetAllVideoByUserIdLogic(ctx, s.svcCtx)
	return l.GetAllVideoByUserId(in)
}

func (s *VideoServiceServer) ChangeVideoComment(ctx context.Context, in *video.ChangeVideoCommentReq) (*video.ChangeVideoCommentResp, error) {
	l := logic.NewChangeVideoCommentLogic(ctx, s.svcCtx)
	return l.ChangeVideoComment(in)
}

func (s *VideoServiceServer) ChangeVideoFavorite(ctx context.Context, in *video.ChangeVideoFavoriteReq) (*video.ChangeVideoFavoriteResp, error) {
	l := logic.NewChangeVideoFavoriteLogic(ctx, s.svcCtx)
	return l.ChangeVideoFavorite(in)
}
