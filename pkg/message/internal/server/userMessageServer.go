// Code generated by goctl. DO NOT EDIT.
// Source: UserMessage.proto

package server

import (
	"context"
	logic2 "douyin/pkg/message/internal/logic"
	"douyin/pkg/message/internal/svc"
	userMessagePb2 "douyin/pkg/message/userMessagePb"
)

type UserMessageServer struct {
	svcCtx *svc.ServiceContext
	userMessagePb2.UnimplementedUserMessageServer
}

func NewUserMessageServer(svcCtx *svc.ServiceContext) *UserMessageServer {
	return &UserMessageServer{
		svcCtx: svcCtx,
	}
}

// -----------------------SendMessage-----------------------
func (s *UserMessageServer) SendMessage(ctx context.Context, in *userMessagePb2.MessageReq) (*userMessagePb2.MessageRes, error) {
	l := logic2.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

// -----------------------GetMessageList-----------------------
func (s *UserMessageServer) GetMessageList(ctx context.Context, in *userMessagePb2.MessageListReq) (*userMessagePb2.MessageListRes, error) {
	l := logic2.NewGetMessageListLogic(ctx, s.svcCtx)
	return l.GetMessageList(in)
}
