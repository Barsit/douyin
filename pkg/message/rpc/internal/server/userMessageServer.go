// Code generated by goctl. DO NOT EDIT.
// Source: UserMessage.proto

package server

import (
	"context"

	"douyin/pkg/message/rpc/internal/logic"
	"douyin/pkg/message/rpc/internal/svc"
	"douyin/pkg/message/rpc/userMessagePb"
)

type UserMessageServer struct {
	svcCtx *svc.ServiceContext
	userMessagePb.UnimplementedUserMessageServer
}

func NewUserMessageServer(svcCtx *svc.ServiceContext) *UserMessageServer {
	return &UserMessageServer{
		svcCtx: svcCtx,
	}
}

// -----------------------SendMessage-----------------------
func (s *UserMessageServer) SendMessage(ctx context.Context, in *userMessagePb.MessageReq) (*userMessagePb.MessageRes, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

// -----------------------GetMessageList-----------------------
func (s *UserMessageServer) GetMessageList(ctx context.Context, in *userMessagePb.MessageListReq) (*userMessagePb.MessageListRes, error) {
	l := logic.NewGetMessageListLogic(ctx, s.svcCtx)
	return l.GetMessageList(in)
}
